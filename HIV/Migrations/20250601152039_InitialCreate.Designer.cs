// <auto-generated />
using System;
using HIV.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HIV.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250601152039_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HIV.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password_hash");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("AccountId")
                        .HasName("PK__Account__46A222CD82E29DFF");

                    b.HasIndex(new[] { "Email" }, "UQ__Account__AB6E6164353CD3C1")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.HasIndex(new[] { "Username" }, "UQ__Account__F3DBC572CF8AE374")
                        .IsUnique();

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("HIV.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("appointment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<DateTime>("AppointmentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("appointment_date")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("doctor_id");

                    b.Property<bool?>("IsAnonymous")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_anonymous");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("patient_id");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("schedule_id");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AppointmentId")
                        .HasName("PK__Appointm__A50828FC82CDE625");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Appointment", (string)null);
                });

            modelBuilder.Entity("HIV.Models.Arv", b =>
                {
                    b.Property<int>("ArvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("arv_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArvId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("ArvId")
                        .HasName("PK__ARV__4A3011CB33E11ADC");

                    b.ToTable("ARV", (string)null);
                });

            modelBuilder.Entity("HIV.Models.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("blog_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogId"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("author_id");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("BlogId")
                        .HasName("PK__Blog__2975AA28A9AF1AD0");

                    b.HasIndex("AuthorId");

                    b.ToTable("Blog", (string)null);
                });

            modelBuilder.Entity("HIV.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("comment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<int?>("BlogId")
                        .HasColumnType("int")
                        .HasColumnName("blog_id");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("CommentId")
                        .HasName("PK__Comment__E7957687F7C7DD95");

                    b.HasIndex("BlogId");

                    b.HasIndex("UserId");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("HIV.Models.CustomizedArvProtocol", b =>
                {
                    b.Property<int>("CustomProtocolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("custom_protocol_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomProtocolId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("doctor_id");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("patient_id");

                    b.HasKey("CustomProtocolId")
                        .HasName("PK__Customiz__0D356AC88E190C35");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("CustomizedARV_Protocol", (string)null);
                });

            modelBuilder.Entity("HIV.Models.CustomizedArvProtocolDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArvId")
                        .HasColumnType("int")
                        .HasColumnName("arv_id");

                    b.Property<int>("CustomProtocolId")
                        .HasColumnType("int")
                        .HasColumnName("custom_protocol_id");

                    b.Property<string>("Dosage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("dosage");

                    b.Property<string>("UsageInstruction")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("usage_instruction");

                    b.HasKey("Id")
                        .HasName("PK__Customiz__3213E83FF6DAC44A");

                    b.HasIndex("ArvId");

                    b.HasIndex("CustomProtocolId");

                    b.ToTable("CustomizedARV_Protocol_Detail", (string)null);
                });

            modelBuilder.Entity("HIV.Models.DoctorInfo", b =>
                {
                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("doctor_id");

                    b.Property<string>("Degree")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("degree");

                    b.Property<int?>("ExperienceYears")
                        .HasColumnType("int")
                        .HasColumnName("experience_years");

                    b.Property<string>("Specialization")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("specialization");

                    b.HasKey("DoctorId")
                        .HasName("PK__DoctorIn__F3993564AA01A7F3");

                    b.ToTable("DoctorInfo", (string)null);
                });

            modelBuilder.Entity("HIV.Models.EducationalResource", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("resource_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResourceId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("ResourceId")
                        .HasName("PK__Educatio__4985FC7394D73E60");

                    b.HasIndex("CreatedBy");

                    b.ToTable("EducationalResources");
                });

            modelBuilder.Entity("HIV.Models.Examination", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("exam_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<int?>("Cd4Count")
                        .HasColumnType("int")
                        .HasColumnName("cd4_count");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("doctor_id");

                    b.Property<DateOnly?>("ExamDate")
                        .HasColumnType("date")
                        .HasColumnName("exam_date");

                    b.Property<int?>("HivLoad")
                        .HasColumnType("int")
                        .HasColumnName("hiv_load");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("patient_id");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("result");

                    b.HasKey("ExamId")
                        .HasName("PK__Examinat__9C8C7BE9F5579390");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Examination", (string)null);
                });

            modelBuilder.Entity("HIV.Models.FacilityInfo", b =>
                {
                    b.Property<int>("FacilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("facility_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacilityId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("FacilityId")
                        .HasName("PK__Facility__B2E8EAAEA86B7394");

                    b.ToTable("FacilityInfo", (string)null);
                });

            modelBuilder.Entity("HIV.Models.Prescription", b =>
                {
                    b.Property<int>("PrescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("prescription_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrescriptionId"));

                    b.Property<int?>("CustomProtocolId")
                        .HasColumnType("int")
                        .HasColumnName("custom_protocol_id");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("doctor_id");

                    b.Property<DateOnly?>("ExamDate")
                        .HasColumnType("date")
                        .HasColumnName("exam_date");

                    b.Property<TimeOnly?>("ExamTime")
                        .HasColumnType("time")
                        .HasColumnName("exam_time");

                    b.Property<int>("ExaminationId")
                        .HasColumnType("int")
                        .HasColumnName("examination_id");

                    b.Property<DateTime?>("IssuedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("issued_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("patient_id");

                    b.HasKey("PrescriptionId")
                        .HasName("PK__Prescrip__3EE444F8F7470B4E");

                    b.HasIndex("CustomProtocolId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.HasIndex(new[] { "ExaminationId" }, "UQ__Prescrip__BCD8253117FF2B27")
                        .IsUnique();

                    b.ToTable("Prescription", (string)null);
                });

            modelBuilder.Entity("HIV.Models.Reminder", b =>
                {
                    b.Property<int>("ReminderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("reminder_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReminderId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<DateTime?>("RemindAt")
                        .HasColumnType("datetime")
                        .HasColumnName("remind_at");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("ReminderId")
                        .HasName("PK__Reminder__E27A36289093D052");

                    b.HasIndex("UserId");

                    b.ToTable("Reminder", (string)null);
                });

            modelBuilder.Entity("HIV.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("schedule_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int")
                        .HasColumnName("doctor_id");

                    b.Property<string>("Room")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("room");

                    b.Property<DateTime>("ScheduledTime")
                        .HasColumnType("datetime")
                        .HasColumnName("scheduled_time");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Available")
                        .HasColumnName("Status");

                    b.HasKey("ScheduleId")
                        .HasName("PK__Schedule__C46A8A6F7368054B");

                    b.HasIndex("DoctorId");

                    b.ToTable("Schedule", (string)null);
                });

            modelBuilder.Entity("HIV.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<DateOnly?>("Birthdate")
                        .HasColumnType("date")
                        .HasColumnName("birthdate");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("full_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gender");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("role");

                    b.HasKey("UserId")
                        .HasName("PK__UserTabl__B9BE370F9A1C2C44");

                    b.HasIndex(new[] { "AccountId" }, "UQ__UserTabl__46A222CC66B4C8A6")
                        .IsUnique();

                    b.ToTable("UserTable", (string)null);
                });

            modelBuilder.Entity("HIV.Models.Appointment", b =>
                {
                    b.HasOne("HIV.Models.User", "Doctor")
                        .WithMany("DoctorAppointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_appointment_doctor");

                    b.HasOne("HIV.Models.User", "Patient")
                        .WithMany("PatientAppointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__Appointme__patie__2F10007B");

                    b.HasOne("HIV.Models.Schedule", "Schedule")
                        .WithMany("Appointments")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Appointme__sched__300424B4");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("HIV.Models.Blog", b =>
                {
                    b.HasOne("HIV.Models.User", "Author")
                        .WithMany("Blogs")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("FK__Blog__author_id__1CF15040");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("HIV.Models.Comment", b =>
                {
                    b.HasOne("HIV.Models.Blog", "Blog")
                        .WithMany("Comments")
                        .HasForeignKey("BlogId")
                        .HasConstraintName("FK__Comment__blog_id__20C1E124");

                    b.HasOne("HIV.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Comment__user_id__21B6055D");

                    b.Navigation("Blog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HIV.Models.CustomizedArvProtocol", b =>
                {
                    b.HasOne("HIV.Models.User", "Doctor")
                        .WithMany("CustomizedArvProtocolDoctors")
                        .HasForeignKey("DoctorId")
                        .HasConstraintName("FK__Customize__docto__3B75D760");

                    b.HasOne("HIV.Models.User", "Patient")
                        .WithMany("CustomizedArvProtocolPatients")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("FK__Customize__patie__3C69FB99");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HIV.Models.CustomizedArvProtocolDetail", b =>
                {
                    b.HasOne("HIV.Models.Arv", "Arv")
                        .WithMany("CustomizedArvProtocolDetails")
                        .HasForeignKey("ArvId")
                        .IsRequired()
                        .HasConstraintName("FK__Customize__arv_i__49C3F6B7");

                    b.HasOne("HIV.Models.CustomizedArvProtocol", "CustomProtocol")
                        .WithMany("CustomizedArvProtocolDetails")
                        .HasForeignKey("CustomProtocolId")
                        .IsRequired()
                        .HasConstraintName("FK__Customize__custo__48CFD27E");

                    b.Navigation("Arv");

                    b.Navigation("CustomProtocol");
                });

            modelBuilder.Entity("HIV.Models.DoctorInfo", b =>
                {
                    b.HasOne("HIV.Models.User", "Doctor")
                        .WithOne("DoctorInfo")
                        .HasForeignKey("HIV.Models.DoctorInfo", "DoctorId")
                        .IsRequired()
                        .HasConstraintName("FK__DoctorInf__docto__286302EC");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("HIV.Models.EducationalResource", b =>
                {
                    b.HasOne("HIV.Models.User", "CreatedByNavigation")
                        .WithMany("EducationalResources")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__Education__creat__25869641");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("HIV.Models.Examination", b =>
                {
                    b.HasOne("HIV.Models.User", "Doctor")
                        .WithMany("ExaminationDoctors")
                        .HasForeignKey("DoctorId")
                        .HasConstraintName("FK__Examinati__docto__33D4B598");

                    b.HasOne("HIV.Models.User", "Patient")
                        .WithMany("ExaminationPatients")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("FK__Examinati__patie__32E0915F");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HIV.Models.Prescription", b =>
                {
                    b.HasOne("HIV.Models.CustomizedArvProtocol", "CustomProtocol")
                        .WithMany("Prescriptions")
                        .HasForeignKey("CustomProtocolId")
                        .HasConstraintName("FK__Prescript__custo__45F365D3");

                    b.HasOne("HIV.Models.User", "Doctor")
                        .WithMany("PrescriptionDoctors")
                        .HasForeignKey("DoctorId")
                        .IsRequired()
                        .HasConstraintName("FK__Prescript__docto__440B1D61");

                    b.HasOne("HIV.Models.Examination", "Examination")
                        .WithOne("Prescription")
                        .HasForeignKey("HIV.Models.Prescription", "ExaminationId")
                        .IsRequired()
                        .HasConstraintName("FK__Prescript__exami__44FF419A");

                    b.HasOne("HIV.Models.User", "Patient")
                        .WithMany("PrescriptionPatients")
                        .HasForeignKey("PatientId")
                        .IsRequired()
                        .HasConstraintName("FK__Prescript__patie__4316F928");

                    b.Navigation("CustomProtocol");

                    b.Navigation("Doctor");

                    b.Navigation("Examination");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HIV.Models.Reminder", b =>
                {
                    b.HasOne("HIV.Models.User", "User")
                        .WithMany("Reminders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Reminder__user_i__37A5467C");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HIV.Models.Schedule", b =>
                {
                    b.HasOne("HIV.Models.User", "Doctor")
                        .WithMany("Schedules")
                        .HasForeignKey("DoctorId")
                        .HasConstraintName("FK__Schedule__doctor__2B3F6F97");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("HIV.Models.User", b =>
                {
                    b.HasOne("HIV.Models.Account", "Account")
                        .WithOne("UserTable")
                        .HasForeignKey("HIV.Models.User", "AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__UserTable__accou__173876EA");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("HIV.Models.Account", b =>
                {
                    b.Navigation("UserTable");
                });

            modelBuilder.Entity("HIV.Models.Arv", b =>
                {
                    b.Navigation("CustomizedArvProtocolDetails");
                });

            modelBuilder.Entity("HIV.Models.Blog", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("HIV.Models.CustomizedArvProtocol", b =>
                {
                    b.Navigation("CustomizedArvProtocolDetails");

                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("HIV.Models.Examination", b =>
                {
                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("HIV.Models.Schedule", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("HIV.Models.User", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("Comments");

                    b.Navigation("CustomizedArvProtocolDoctors");

                    b.Navigation("CustomizedArvProtocolPatients");

                    b.Navigation("DoctorAppointments");

                    b.Navigation("DoctorInfo");

                    b.Navigation("EducationalResources");

                    b.Navigation("ExaminationDoctors");

                    b.Navigation("ExaminationPatients");

                    b.Navigation("PatientAppointments");

                    b.Navigation("PrescriptionDoctors");

                    b.Navigation("PrescriptionPatients");

                    b.Navigation("Reminders");

                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
